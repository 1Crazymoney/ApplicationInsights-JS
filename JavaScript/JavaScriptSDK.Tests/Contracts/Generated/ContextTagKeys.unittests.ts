// THIS FILE WAS AUTOGENERATED
/// <reference path="../../External/qunit.d.ts" />
/// <reference path="../../../JavaScriptSDK/Contracts/Generated/ContextTagKeys.ts" />
QUnit.test("Test property ContextTagKeys.ApplicationVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationVersion !== null, "ContextTagKeys.applicationVersion == null");
    QUnit.ok(temp.applicationVersion === "ai.application.ver", "Issue with ContextTagKeys.applicationVersion");
});

QUnit.test("Test property ContextTagKeys.ApplicationBuild was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.applicationBuild !== null, "ContextTagKeys.applicationBuild == null");
    QUnit.ok(temp.applicationBuild === "ai.application.build", "Issue with ContextTagKeys.applicationBuild");
});

QUnit.test("Test property ContextTagKeys.DeviceId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceId !== null, "ContextTagKeys.deviceId == null");
    QUnit.ok(temp.deviceId === "ai.device.id", "Issue with ContextTagKeys.deviceId");
});

QUnit.test("Test property ContextTagKeys.DeviceIp was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceIp !== null, "ContextTagKeys.deviceIp == null");
    QUnit.ok(temp.deviceIp === "ai.device.ip", "Issue with ContextTagKeys.deviceIp");
});

QUnit.test("Test property ContextTagKeys.DeviceLanguage was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceLanguage !== null, "ContextTagKeys.deviceLanguage == null");
    QUnit.ok(temp.deviceLanguage === "ai.device.language", "Issue with ContextTagKeys.deviceLanguage");
});

QUnit.test("Test property ContextTagKeys.DeviceLocale was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceLocale !== null, "ContextTagKeys.deviceLocale == null");
    QUnit.ok(temp.deviceLocale === "ai.device.locale", "Issue with ContextTagKeys.deviceLocale");
});

QUnit.test("Test property ContextTagKeys.DeviceModel was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceModel !== null, "ContextTagKeys.deviceModel == null");
    QUnit.ok(temp.deviceModel === "ai.device.model", "Issue with ContextTagKeys.deviceModel");
});

QUnit.test("Test property ContextTagKeys.DeviceNetwork was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceNetwork !== null, "ContextTagKeys.deviceNetwork == null");
    QUnit.ok(temp.deviceNetwork === "ai.device.network", "Issue with ContextTagKeys.deviceNetwork");
});

QUnit.test("Test property ContextTagKeys.DeviceOEMName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOEMName !== null, "ContextTagKeys.deviceOEMName == null");
    QUnit.ok(temp.deviceOEMName === "ai.device.oemName", "Issue with ContextTagKeys.deviceOEMName");
});

QUnit.test("Test property ContextTagKeys.DeviceOS was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOS !== null, "ContextTagKeys.deviceOS == null");
    QUnit.ok(temp.deviceOS === "ai.device.os", "Issue with ContextTagKeys.deviceOS");
});

QUnit.test("Test property ContextTagKeys.DeviceOSVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceOSVersion !== null, "ContextTagKeys.deviceOSVersion == null");
    QUnit.ok(temp.deviceOSVersion === "ai.device.osVersion", "Issue with ContextTagKeys.deviceOSVersion");
});

QUnit.test("Test property ContextTagKeys.DeviceRoleInstance was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceRoleInstance !== null, "ContextTagKeys.deviceRoleInstance == null");
    QUnit.ok(temp.deviceRoleInstance === "ai.device.roleInstance", "Issue with ContextTagKeys.deviceRoleInstance");
});

QUnit.test("Test property ContextTagKeys.DeviceRoleName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceRoleName !== null, "ContextTagKeys.deviceRoleName == null");
    QUnit.ok(temp.deviceRoleName === "ai.device.roleName", "Issue with ContextTagKeys.deviceRoleName");
});

QUnit.test("Test property ContextTagKeys.DeviceScreenResolution was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceScreenResolution !== null, "ContextTagKeys.deviceScreenResolution == null");
    QUnit.ok(temp.deviceScreenResolution === "ai.device.screenResolution", "Issue with ContextTagKeys.deviceScreenResolution");
});

QUnit.test("Test property ContextTagKeys.DeviceType was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceType !== null, "ContextTagKeys.deviceType == null");
    QUnit.ok(temp.deviceType === "ai.device.type", "Issue with ContextTagKeys.deviceType");
});

QUnit.test("Test property ContextTagKeys.DeviceMachineName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.deviceMachineName !== null, "ContextTagKeys.deviceMachineName == null");
    QUnit.ok(temp.deviceMachineName === "ai.device.machineName", "Issue with ContextTagKeys.deviceMachineName");
});

QUnit.test("Test property ContextTagKeys.LocationIp was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.locationIp !== null, "ContextTagKeys.locationIp == null");
    QUnit.ok(temp.locationIp === "ai.location.ip", "Issue with ContextTagKeys.locationIp");
});

QUnit.test("Test property ContextTagKeys.OperationId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationId !== null, "ContextTagKeys.operationId == null");
    QUnit.ok(temp.operationId === "ai.operation.id", "Issue with ContextTagKeys.operationId");
});

QUnit.test("Test property ContextTagKeys.OperationName was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationName !== null, "ContextTagKeys.operationName == null");
    QUnit.ok(temp.operationName === "ai.operation.name", "Issue with ContextTagKeys.operationName");
});

QUnit.test("Test property ContextTagKeys.OperationParentId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationParentId !== null, "ContextTagKeys.operationParentId == null");
    QUnit.ok(temp.operationParentId === "ai.operation.parentId", "Issue with ContextTagKeys.operationParentId");
});

QUnit.test("Test property ContextTagKeys.OperationRootId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationRootId !== null, "ContextTagKeys.operationRootId == null");
    QUnit.ok(temp.operationRootId === "ai.operation.rootId", "Issue with ContextTagKeys.operationRootId");
});

QUnit.test("Test property ContextTagKeys.OperationSyntheticSource was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationSyntheticSource !== null, "ContextTagKeys.operationSyntheticSource == null");
    QUnit.ok(temp.operationSyntheticSource === "ai.operation.syntheticSource", "Issue with ContextTagKeys.operationSyntheticSource");
});

QUnit.test("Test property ContextTagKeys.OperationIsSynthetic was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.operationIsSynthetic !== null, "ContextTagKeys.operationIsSynthetic == null");
    QUnit.ok(temp.operationIsSynthetic === "ai.operation.isSynthetic", "Issue with ContextTagKeys.operationIsSynthetic");
});

QUnit.test("Test property ContextTagKeys.SessionId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionId !== null, "ContextTagKeys.sessionId == null");
    QUnit.ok(temp.sessionId === "ai.session.id", "Issue with ContextTagKeys.sessionId");
});

QUnit.test("Test property ContextTagKeys.SessionIsFirst was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionIsFirst !== null, "ContextTagKeys.sessionIsFirst == null");
    QUnit.ok(temp.sessionIsFirst === "ai.session.isFirst", "Issue with ContextTagKeys.sessionIsFirst");
});

QUnit.test("Test property ContextTagKeys.SessionIsNew was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sessionIsNew !== null, "ContextTagKeys.sessionIsNew == null");
    QUnit.ok(temp.sessionIsNew === "ai.session.isNew", "Issue with ContextTagKeys.sessionIsNew");
});

QUnit.test("Test property ContextTagKeys.UserAccountAcquisitionDate was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAccountAcquisitionDate !== null, "ContextTagKeys.userAccountAcquisitionDate == null");
    QUnit.ok(temp.userAccountAcquisitionDate === "ai.user.accountAcquisitionDate", "Issue with ContextTagKeys.userAccountAcquisitionDate");
});

QUnit.test("Test property ContextTagKeys.UserAccountId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAccountId !== null, "ContextTagKeys.userAccountId == null");
    QUnit.ok(temp.userAccountId === "ai.user.accountId", "Issue with ContextTagKeys.userAccountId");
});

QUnit.test("Test property ContextTagKeys.UserAgent was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userAgent !== null, "ContextTagKeys.userAgent == null");
    QUnit.ok(temp.userAgent === "ai.user.userAgent", "Issue with ContextTagKeys.userAgent");
});

QUnit.test("Test property ContextTagKeys.UserId was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userId !== null, "ContextTagKeys.userId == null");
    QUnit.ok(temp.userId === "ai.user.id", "Issue with ContextTagKeys.userId");
});

QUnit.test("Test property ContextTagKeys.UserStoreRegion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.userStoreRegion !== null, "ContextTagKeys.userStoreRegion == null");
    QUnit.ok(temp.userStoreRegion === "ai.user.storeRegion", "Issue with ContextTagKeys.userStoreRegion");
});

QUnit.test("Test property ContextTagKeys.SampleRate was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.sampleRate !== null, "ContextTagKeys.sampleRate == null");
    QUnit.ok(temp.sampleRate === "ai.sample.sampleRate", "Issue with ContextTagKeys.sampleRate");
});

QUnit.test("Test property ContextTagKeys.InternalSdkVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalSdkVersion !== null, "ContextTagKeys.internalSdkVersion == null");
    QUnit.ok(temp.internalSdkVersion === "ai.internal.sdkVersion", "Issue with ContextTagKeys.internalSdkVersion");
});

QUnit.test("Test property ContextTagKeys.InternalAgentVersion was created and default is set", function () {
    var temp = new AI.ContextTagKeys();
    QUnit.ok(temp.internalAgentVersion !== null, "ContextTagKeys.internalAgentVersion == null");
    QUnit.ok(temp.internalAgentVersion === "ai.internal.agentVersion", "Issue with ContextTagKeys.internalAgentVersion");
});

